unit U_player;
interface
uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, U_BaseForm, Vcl.Imaging.jpeg,
  Vcl.ExtCtrls, Vcl.OleCtrls, WMPLib_TLB, Vcl.StdCtrls, Vcl.Imaging.pngimage,
  U_SaibaMais, Vcl.ComCtrls;
type
  TF_player = class(TBaseForm)
    MediaPlayer: TWindowsMediaPlayer;
    timer: TTimer;
    painel: TPanel;
    mediaTimer: TTimer;
    procedure FormActivate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure timerTimer(Sender: TObject);
    procedure FormKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);

    //------------------EVENTOS---------------------------

    //PLAY

    procedure EventPlayClick(sender:TObject);
    procedure EventPlayEnter(sender:TObject);
    procedure EventPlayLeave(sender:TObject);

    function imageChange(IsHover:boolean;imgs:Timage):string;
    procedure PlayerControls;
    procedure showPlayerControls;
    procedure hidePlayerControls;
    procedure PlayAction(IsHover:boolean;imgs:TImage);
    function getPlayerControls(nome:string):TImage;
    procedure mediaTimerTimer(Sender: TObject);
    procedure MediaPlayerPositionChange(ASender: TObject; oldPosition,
      newPosition: Double);
    function formatTempo(tempo:string):string;


  private
    { Private declarations }
  public
    { Public declarations }
    FAction: integer;
    procedure finalize;
  end;
var
  F_player: TF_player;
  j:integer;
  lb_atual,lb_total:tlabel;
  barra:TProgressBar;
  IsPause:boolean=true;
  IsFull:boolean=true;
  IsMute:boolean=false;
  player:IWMPCore;


implementation
{$R *.dfm}
uses U_dm, U_Out;

//------------------------------------------------------------------------------

procedure TF_player.FormActivate(Sender: TObject);
begin
    inherited;
    self.Caption:='CineShow - '+dm.FilmeOption.GetNome;
    mediaplayer.URL:= dm.media + dm.FilmeOption.getMP4;
    player:=mediaplayer.ControlInterface;
    timer.Enabled:=true;
    FAction:=1;
    j:=0;

    painel.Caption:='';
    Constraints.MaxHeight :=  0;
    Constraints.MinHeight := 574;
    Constraints.MaxWidth := 0;
    Constraints.MinWidth := 1020;

    self.clientwidth:=1020;
    self.ClientHeight:=574;

    player.settings.volume:=100;
    mediaplayer.Width:=clientWidth;
    mediaplayer.Height:=clientHeight;
    borderIcons:=[biSystemMenu,biMinimize];
    mediaplayer.left:=0;
    playercontrols;
    if dm.SaibaOption then
    begin
      dm.SaibaOption:=false;
      F_SaibaMais.VAction:=2;
      F_saibaMais.close;
    end;
end;
function TF_player.formatTempo(tempo: string): string;
var
i:integer;
sub:string;
begin

  sub:='';
  if tempo.Length = 8 then
  begin
    tempo:=inttostr(strtoint( copy(tempo,4,2)+copy(tempo,7,2) )-1);
    sub:='0'+copy(tempo,1,1)+':'+copy(tempo,2,2);
  end else begin
    i:=strtoint(tempo);
    if i > 59 then
    begin
      tempo:=inttostr(i div 60);
      if (i mod 60)<10 then
      tempo:=tempo+'0'+inttostr(i mod 60);
      tempo:=tempo+inttostr(i mod 60);
      sub:='0'+copy(tempo,1,1)+':'+copy(tempo,2,2);
    end else
    if tempo.Length = 2 then
    begin
      sub:='00:'+copy(tempo,1,2);
    end else
    if tempo.Length = 1 then
    begin
      sub:='00:0'+copy(tempo,1,1);
    end;

  end;
  result:=sub;
end;

procedure TF_player.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  if player.playState = wmppsPlaying then
  PlayAction(false,getPlayerControls('FPlay'));
  if FAction = 1 then
  begin
    showmessage('close: abre o Form Out');
    dm.OutOption:=3;
    Action:=TCloseAction.caNone;
    Application.CreateForm(TF_Out,F_Out);
    F_Out.ShowModal;
  end else begin
  showmessage('close: salva as coisas no banco e fecha');
    Action:=TCloseAction.caFree;
  end;

end;

function TF_player.getPlayerControls(nome: string): TImage;
var
i:integer;
begin
  for i:=0 to painel.ComponentCount-1 do
  begin
    if painel.Components[i] is TImage then
    begin
      if (painel.Components[i] as TImage).Name = nome then
      begin
        result:=(painel.Components[i] as TImage);
        exit
      end;
    end;
  end;
end;

procedure TF_player.PlayAction(IsHover: boolean; imgs: TImage);
begin
  if imgs.name = 'FPlay' then   // PLAY
  begin
    if IsPause then
      begin
        IsPause:=false;
        player.controls.pause;
        imgs.Picture.LoadFromFile(dm.templates + F_Player.imageChange(IsHover,imgs));
      end else begin
        IsPause:=true;
        player.controls.play;
        imgs.Picture.LoadFromFile(dm.templates + F_Player.imageChange(IsHover,imgs));
      end;
  end else
  if imgs.name = 'FAvancar' then   // AVANCAR
  begin
     player.controls.currentPosition:=player.controls.currentPosition+20;
      imgs.Picture.LoadFromFile(dm.templates+imageChange(IsHover,imgs));
  end else
  if imgs.name = 'FRetroceder' then   // RETROCEDER
  begin
     player.controls.currentPosition:=player.controls.currentPosition-20;
      imgs.Picture.LoadFromFile(dm.templates+imageChange(IsHover,imgs));
  end else
  if imgs.Name = 'FfullScreen' then       //FULL SCREEN
  begin
    if IsFull then
    begin
      IsFull:=false;
      mediaplayer.fullScreen:=true;
      imgs.Picture.LoadFromFile(dm.templates+imageChange(IsHover,imgs));
    end else begin
      IsFull:=true;
      mediaplayer.fullScreen:=false;
      imgs.Picture.LoadFromFile(dm.templates+imageChange(IsHover,imgs));
    end;
  end else
  if imgs.Name = 'FVolume' then       //FULL SCREEN
  begin
    if IsMute then
    begin
      IsMute:=false;
      player.settings.mute:=false;
      imgs.Picture.LoadFromFile(dm.templates+imageChange(IsHover,imgs));
    end else begin
      IsMute:=true;
      player.settings.mute:=true;
      imgs.Picture.LoadFromFile(dm.templates+imageChange(IsHover,imgs));
    end;
  end else
  if imgs.Name = 'FVoltar' then
  begin
    if player.playState = wmppsPlaying then
    PlayAction(false,getPlayerControls('FPlay'));
    dm.OutOption:=2;
    FAction:=2;
    Application.CreateForm(TF_Out,F_Out);
    F_Out.ShowModal;
  end;
end;

procedure TF_player.PlayerControls;
var
imgs:TImage;
titulo:tlabel;
Fleft,FRight:integer;
begin
  painel.Width:=clientwidth;
  painel.Height:=75;
  painel.Align:=alBottom;

  FRight:=painel.Width-60;
  // full Screen
  imgs:=TImage.Create(Painel);
  imgs.Parent:=painel;
  imgs.Name:='FfullScreen';
  imgs.Stretch:=true;
  imgs.Width:=37;
  imgs.Height:=37;
  imgs.Top:=((painel.Height+15) div 2)-(imgs.Height div 2);
  imgs.Left:=FRight;
  imgs.Picture.LoadFromFile(dm.templates+imageChange(false,imgs));
  imgs.OnClick:=EventPlayClick;
  imgs.OnMouseEnter:=EventPlayEnter;
  imgs.OnMouseLeave:=EventPlayLeave;

  FRight:=FRight-60;
  //volume
  imgs:=TImage.Create(Painel);
  imgs.Parent:=painel;
  imgs.Name:='FVolume';
  imgs.Stretch:=true;
  imgs.Width:=32;
  imgs.Height:=32;
  imgs.Top:=((painel.Height+15) div 2)-(imgs.Height div 2);
  imgs.Left:=FRight;
  imgs.Picture.LoadFromFile(dm.templates+imageChange(false,imgs));
  imgs.OnClick:=EventPlayClick;
  imgs.OnMouseEnter:=EventPlayEnter;
  imgs.OnMouseLeave:=EventPlayLeave;

  FRight:=FRight-60;

  //voltar
  imgs:=TImage.Create(Painel);
  imgs.Parent:=painel;
  imgs.Name:='FVoltar';
  imgs.Stretch:=true;
  imgs.Width:=32;
  imgs.Height:=32;
  imgs.Top:=((painel.Height+15) div 2)-(imgs.Height div 2);
  imgs.Left:=FRight;
  imgs.Picture.LoadFromFile(dm.templates+imageChange(false,imgs));
  imgs.OnClick:=EventPlayClick;
  imgs.OnMouseEnter:=EventPlayEnter;
  imgs.OnMouseLeave:=EventPlayLeave;

  FLeft:=30;
  // retroceder
  imgs:=TImage.Create(Painel);
  imgs.Parent:=painel;
  imgs.Name:='FRetroceder';
  imgs.Stretch:=true;
  imgs.Width:=32;
  imgs.Height:=32;
  imgs.Top:=((painel.Height+15) div 2)-(imgs.Height div 2);
  imgs.Left:=FLeft;
  imgs.Picture.LoadFromFile(dm.templates+imageChange(false,imgs));
  imgs.OnClick:=EventPlayClick;
  imgs.OnMouseEnter:=EventPlayEnter;
  imgs.OnMouseLeave:=EventPlayLeave;

  FLeft:=FLeft+60;
  // play
  imgs:=TImage.Create(Painel);
  imgs.Parent:=painel;
  imgs.Name:='FPlay';
  imgs.Stretch:=true;
  imgs.Width:=32;
  imgs.Height:=32;
  imgs.Top:=((painel.Height+15) div 2)-(imgs.Height div 2);
  imgs.Left:=FLeft;
  imgs.Picture.LoadFromFile(dm.templates+imageChange(false,imgs));
  imgs.OnClick:=EventPlayClick;
  imgs.OnMouseEnter:=EventPlayEnter;
  imgs.OnMouseLeave:=EventPlayLeave;

  FLeft:=FLeft+60;
  // avancar
  imgs:=TImage.Create(Painel);
  imgs.Parent:=painel;
  imgs.Name:='FAvancar';
  imgs.Stretch:=true;
  imgs.Width:=32;
  imgs.Height:=32;
  imgs.Top:=((painel.Height+15) div 2)-(imgs.Height div 2);
  imgs.Left:=FLeft;
  imgs.Picture.LoadFromFile(dm.templates+imageChange(false,imgs));
  imgs.OnClick:=EventPlayClick;
  imgs.OnMouseEnter:=EventPlayEnter;
  imgs.OnMouseLeave:=EventPlayLeave;

  //Barra de progresso
  barra:=TProgressBar.Create(painel);
  barra.parent:=painel;
  barra.Width:=painel.Width-(painel.Width div 10);
  barra.Height:=15;
  barra.Top:=0;
  barra.Left:=(painel.Width div 2)-(barra.Width div 2);

  //tempo total
  lb_total:=tlabel.Create(painel);
  lb_total.parent:=painel;
  lb_total.font.Color:=clWhite;
  lb_total.Font.Name:='Tahoma';
  lb_total.Font.Size:=11;
  lb_total.Top:=0;
  lb_total.left:=barra.Left+barra.Width+5;

  //tempo atual
   lb_atual:=tlabel.Create(painel);
  lb_atual.parent:=painel;
  lb_atual.font.Color:=clWhite;
  lb_atual.Font.Name:='Tahoma';
  lb_atual.Font.Size:=11;
  lb_atual.caption:='00:00';
  lb_atual.Top:=0;
  lb_atual.left:=barra.Left-(lb_atual.Width+5);

  // titulo
  titulo:=TLabel.Create(painel);
  titulo.Parent:=painel;
  titulo.Caption:=dm.FilmeOption.GetNome;
  titulo.font.Color:=clWhite;
  titulo.Font.Name:='Tahoma';
  titulo.Font.Size:=16;
  titulo.Top:=((painel.Height+15) div 2)-(titulo.Height div 2);
  titulo.Left:=(painel.Width div 2)-(titulo.Width div 2);

end;

procedure TF_player.showPlayerControls;
begin
  painel.Visible:=true;
end;

procedure TF_player.hidePlayerControls;
begin
  painel.Visible:=false;
end;

procedure TF_player.timerTimer(Sender: TObject);
begin
  inherited;
  if j = 0 then
  begin
    lb_total.Caption:=formatTempo(dm.FilmeOption.GetDuracao);
    barra.max:=trunc(player.currentMedia.duration - 1);
    if dm.RetomarFindById(dm.FilmeOption.GetId) then
    begin
        player.controls.currentPosition:=dm.RetomarGetTempo(dm.FilmeOption.GetId);
    end;
  end;
  lb_atual.Caption:=formatTempo(inttostr(trunc(player.controls.currentPosition)));
  barra.Position:=trunc(player.controls.currentPosition);
  j:=j+1;;
end;

//---------------------------  EVENTOS  --------------------------------------

//--------------------------- CLICK ------------------------------------------

procedure TF_player.EventPlayClick(sender: TObject);
begin
  PlayAction(true,sender as TImage);
end;

//-------------------------- ENTER ----------------------------------------

procedure TF_player.EventPlayEnter(sender: TObject);
begin

  (sender as TImage).Picture.LoadFromFile(dm.templates+imageChange(true,sender as TImage));
end;

//-------------------------- LEAVE ----------------------------------------

procedure TF_player.EventPlayLeave(sender: TObject);
begin
  (sender as TImage).Picture.LoadFromFile(dm.templates+imageChange(false,sender as TImage));
end;

procedure TF_player.finalize;
begin
    if player.controls.currentPosition > (player.currentMedia.duration * 0.91) then
    begin  //TERMINOU
      if dm.RetomarFindById(dm.FilmeOption.GetId) then
      begin
        dm.RetomarDelete(dm.FilmeOption.GetId);
        dm.MediaAddViews(dm.FilmeOption.GetId);
      end;
    end else  //NAO TERMINOU
    if j > 30 then
    begin
        dm.RetomarAdd(dm.FilmeOption.GetId,trunc(player.controls.currentPosition));
    end;
end;

//-------------------------- TROCA IMAGENS ----------------------------------------

function TF_player.imageChange(IsHover:boolean;imgs:TImage): string;
var
 nome:string;
begin
  if imgs.Name = 'FPlay' then            //PLAY
  begin
     if IsPause then
    begin
      if IsHover then
        result:='painelPlayer\hover\pause.png'
      else
        result:='painelPlayer\pause.png';
    end else
    begin
      if IsHover then
        result:='painelPlayer\hover\play.png'
      else
        result:='painelPlayer\play.png';
    end;
  end else
  if imgs.Name = 'FAvancar' then        //AVANCAR
  begin
     if IsHover then
       result:='painelPlayer\hover\avancar.png'
     else
       result:='painelPlayer\avancar.png';
  end else
  if imgs.Name = 'FRetroceder' then     //RETROCEDER
  begin
     if IsHover then
       result:='painelPlayer\hover\retroceder.png'
     else
       result:='painelPlayer\retroceder.png';
  end else
  if imgs.Name = 'FfullScreen' then     //FULL SCREEN
  begin
    if IsFull then
    begin
      if IsHover then
        result:='painelPlayer\hover\fullScreen.png'
      else
        result:='painelPlayer\fullScreen.png';
    end else
    begin
      if IsHover then
        result:='painelPlayer\hover\normalScreen.png'
      else
        result:='painelPlayer\normalScreen.png';
    end;
  end else
  if imgs.Name = 'FVolume' then         //VOLUME
  begin
    if IsMute then
    begin
      if IsHover then
         result:='painelPlayer\hover\mudo.png'
        else
          result:='painelPlayer\mudo.png';
    end else begin
      if IsHover then
        result:='painelPlayer\hover\volume.png'
      else
        result:='painelPlayer\volume.png';
    end;
  end else
  if imgs.Name = 'FVoltar' then         //VOLTAR
  begin
    if IsHover then
         result:='painelPlayer\hover\voltar.png'
        else
          result:='painelPlayer\voltar.png';
  end;

end;

procedure TF_player.MediaPlayerPositionChange(ASender: TObject; oldPosition,
  newPosition: Double);
begin
  inherited;
  {if (newPosition >= player.currentMedia.duration)or((newPosition = 0)and(oldPosition > (player.currentMedia.duration * 0.8))) then
  begin
    newPosition:=player.currentMedia.duration;
  end;  }

end;

procedure TF_player.mediaTimerTimer(Sender: TObject);
begin
  inherited;
  if player.controls.currentPosition >= (player.currentMedia.duration-0.3) then
  begin
    player.controls.currentPosition:= player.currentMedia.duration-0.3;
  end;
end;

procedure TF_player.FormKeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  case key of

   32,75:PlayAction(false,getPlayerControls('FPlay'));
   39,76:PlayAction(false,getPlayerControls('FAvancar'));
   37,74:PlayAction(false,getPlayerControls('FRetroceder'));
   70,122:PlayAction(false,getPlayerControls('FfullScreen'));
   77:PlayAction(false,getPlayerControls('FVolume'));
   27: begin
      if not IsFull then
      begin
        IsFull:=true;
        getPlayerControls('FfullScreen').Picture.LoadFromFile(dm.templates+ImageChange(false,getPlayerControls('FfullScreen')));
      end;
   end;

  end;   //fecha Case


end;

//------------------------------------------------------------------------------

end.


{
mediaplayer.settings.volume  // +- volume
mediaplayer.settings.mute:=true; // deixa sem som
}
